{-
  TASK 5 - Fibonacci sequence
  Implement a function that generates the Fibonacci
  sequence from N to N+K terms (0<=N<=370; 0<=N+K<=371; 0<=K<=255).
  The first two terms of the Fibonacci sequence are F_0 = 0 and F_1 = 1,
  and the rest are defined as F_n = F_(n-1) + F_(n-2).
  The resulting Fibonacci sequence should be stored in a tuple.
  For example, a request with N = 1 and K = 3 should return a tuple [1, 1, 2],
  and a request with N = 201 and K = 4 should return a tuple
  [453973694165307953197296969697410619233826,
  734544867157818093234908902110449296423351,
  1188518561323126046432205871807859915657177,
  1923063428480944139667114773918309212080528]
-}

() recv_internal() {
}

;; testable
(tuple) fibonacci_sequence (int n, int k) method_id {
  var output = empty_tuple();
  var j = (n + k);

  if (k == 0) {
    return output;
  }

  var n1 = 0;
  var n2 = 1;
  var i = 1;

  repeat (n - 1) {
    (n1, n2) = (n2, n1 + n2);
  }

  output~tpush(n2);
  repeat (k - 2) {
    (n1, n2) = (n2, n1 + n2);

    output~tpush(n1);
  }

  if (k >= 2) {
    output~tpush(n2);
  }

  return output;
}

