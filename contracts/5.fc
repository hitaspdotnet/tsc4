{-
  TASK 5 - Fibonacci sequence
  Implement a function that generates the Fibonacci
  sequence from N to N+K terms (0<=N<=370; 0<=N+K<=371; 0<=K<=255).
  The first two terms of the Fibonacci sequence are F_0 = 0 and F_1 = 1,
  and the rest are defined as F_n = F_(n-1) + F_(n-2).
  The resulting Fibonacci sequence should be stored in a tuple.
  For example, a request with N = 1 and K = 3 should return a tuple [1, 1, 2],
  and a request with N = 201 and K = 4 should return a tuple
  [453973694165307953197296969697410619233826,
  734544867157818093234908902110449296423351,
  1188518561323126046432205871807859915657177,
  1923063428480944139667114773918309212080528]
-}

(tuple) hi_fib(int n, int k) asm """
NIL
        OVER
        0 EQINT
        IFJMP:<{
        2 1 BLKDROP2
        }>
        0 PUSHINT
        1 PUSHINT
        s0 s4 XCHG
        REPEAT:<{
        s3 PUSH
                ADD
                s0 s3 XCHG
        }>
        TUCK
        TPUSH
        s2 PUSH
        -2 ADDCONST
        REPEAT:<{
        s1 s3 XCPU
                ADD
                s1 s3 XCPU
                TPUSH
                s1 s3 XCHG
        }>
        NIP
        SWAP
        1 GTINT
        IF:<{
        SWAP
                TPUSH
        }>ELSE<{
        NIP
        }>
        """;

() recv_internal() {
}

;; testable
(tuple) fibonacci_sequence (int n, int k) method_id {
  if (k == 0) {
    return empty_tuple();
  }

  tuple output = hi_fib(n, k);
        ~dump(output);
  return output;
}

